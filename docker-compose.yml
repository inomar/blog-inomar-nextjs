version: "3.7"

services:
  wordmove:
    tty: true
    depends_on:
      - wp-api
    image: welaika/wordmove
    restart: on-failure:5
    container_name: "${PRODUCTION_NAME}_wordmove"
    volumes:
      - ./config:/home/
      - ./public:/var/www/html
      - ~/.ssh:/home/.ssh
    environment:
      LOCAL_SERVER_PORT: "${LOCAL_SERVER_PORT}"
      PRODUCTION_URL: "${PRODUCTION_URL}"
      PRODUCTION_DIR_PATH: "${PRODUCTION_DIR_PATH}"
      PRODUCTION_DB_NAME: "${PRODUCTION_DB_NAME}"
      PRODUCTION_DB_USER: "${PRODUCTION_DB_USER}"
      PRODUCTION_DB_PASSWORD: "${PRODUCTION_DB_PASSWORD}"
      PRODUCTION_DB_HOST: "${PRODUCTION_DB_HOST}"
      PRODUCTION_DB_PORT: "${PRODUCTION_DB_PORT}"
      PRODUCTION_SSH_HOST: "${PRODUCTION_SSH_HOST}"
      PRODUCTION_SSH_USER: "${PRODUCTION_SSH_USER}"
      PRODUCTION_SSH_PORT: "${PRODUCTION_SSH_PORT}"

  wp-api:
    build: wordpress
    container_name: "${PRODUCTION_NAME}_wordpress"
    ports:
      - 9000:80
    links:
      - db
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wp_user
      WORDPRESS_DB_PASSWORD: database_password

  db:
    image: mysql:5.7
    container_name: "${PRODUCTION_NAME}_db"
    ports:
      - 4306:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: database_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: database_password
    volumes:
      - ./db/data:/var/lib/mysql
      - ./db/data:/docker-entrypoint-initdb.d

  frontend:
    build: frontend
    container_name: "${PRODUCTION_NAME}_next"
    ports:
      - 3000:3000
    links:
      - wp-api
    volumes:
      - ./frontend:/usr/local/app
    environment:
      WP_URL: "http://wp-api:80"
    restart: always
    working_dir: /usr/local/app
    entrypoint: "/bin/bash"
    command: "-c \"if [ ! -d \"node_modules\" ]; then yarn; fi; yarn dev\""
  